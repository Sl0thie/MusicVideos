<?xml version="1.0" encoding="UTF-8"?>
<Shell xmlns="http://xamarin.com/schemas/2014/forms" 
       xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
       xmlns:local="clr-namespace:MusicVideosRemote.Views"
       Title="MusicVideosRemote"
       x:Class="MusicVideosRemote.AppShell"
       FlyoutBackgroundColor="#121212"
       >

    <!--
        The overall app visual hierarchy is defined here, along with navigation.
    
        https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/
    -->

    <Shell.Resources>
        <ResourceDictionary>
            <Style x:Key="BaseStyle" TargetType="Element">
                <Setter Property="Shell.BackgroundColor" Value="#000000" />
                <Setter Property="Shell.ForegroundColor" Value="#777777" />
                <Setter Property="Shell.TitleColor" Value="#777777" />
                <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
                <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
                <Setter Property="Shell.TabBarBackgroundColor" Value="#121212" />
                <Setter Property="Shell.TabBarForegroundColor" Value="#777777"/>
                <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF"/>
                <Setter Property="Shell.TabBarTitleColor" Value="#777777"/>
                <Setter Property="Shell.FlyoutBackgroundColor" Value="#080808"/>

            </Style>
            <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
            <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

            <!--
            Default Styles for all Flyout Items
            https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
            -->

            <Style Class="FlyoutItemLabelStyle" TargetType="Label">
                <Setter Property="TextColor" Value="#777777"></Setter>
            </Style>
            <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="#121212" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="#777777" />
                                </VisualState.Setters>
                            </VisualState>
                            <VisualState x:Name="Selected">
                                <VisualState.Setters>
                                    <Setter Property="BackgroundColor" Value="#323232" />
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="#777777" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>

            <!--
            Custom Style you can apply to any Flyout Item
            -->
            <Style Class="MenuItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
                <Setter Property="VisualStateManager.VisualStateGroups">
                    <VisualStateGroupList>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="Normal">
                                <VisualState.Setters>
                                    <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="#FFFFFF" />
                                </VisualState.Setters>
                            </VisualState>
                        </VisualStateGroup>
                    </VisualStateGroupList>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Shell.Resources>

    <!-- 
        When the Flyout is visible this defines the content to display in the flyout.
        FlyoutDisplayOptions="AsMultipleItems" will create a separate flyout item for each child element    
        https://docs.microsoft.com/dotnet/api/xamarin.forms.shellgroupitem.flyoutdisplayoptions?view=xamarin-forms
    -->

    <FlyoutItem Title="Now Playing" Icon="icon_about.png" >
        <ShellContent Route="NowPlayingPage" ContentTemplate="{DataTemplate local:NowPlayingPage}" />
    </FlyoutItem>

    <FlyoutItem Title="Filter" Icon="icon_about.png">
        <ShellContent Route="FilterPage" ContentTemplate="{DataTemplate local:FilterPage}" />
    </FlyoutItem>

    <FlyoutItem Title="Videos (Filtered)" Icon="icon_about.png">
        <ShellContent Route="VideosFilteredPage" ContentTemplate="{DataTemplate local:VideosFilteredPage}" />
    </FlyoutItem>

    <FlyoutItem Title="Videos (All)" Icon="icon_about.png">
        <ShellContent Route="VideosAllPage" ContentTemplate="{DataTemplate local:VideosAllPage}" />
    </FlyoutItem>

    <FlyoutItem Title="Videos (Search)" Icon="icon_about.png">
        <ShellContent Route="VideosSearchPage" ContentTemplate="{DataTemplate local:VideosSearchPage}" />
    </FlyoutItem>

    <FlyoutItem Title="Videos (Top 100)" Icon="icon_about.png">
        <ShellContent Route="VideosTop100Page" ContentTemplate="{DataTemplate local:VideosTop100Page}" />
    </FlyoutItem>

    <FlyoutItem Title="Videos (Queued)" Icon="icon_about.png">
        <ShellContent Route="VideosQueuedPage" ContentTemplate="{DataTemplate local:VideosQueuedPage}" />
    </FlyoutItem>
</Shell>